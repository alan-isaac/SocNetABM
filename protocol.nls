; the reporters for the behaviorspace run


; reports true if scientists have converged and have become 
; sufficiently confident in their belief
to-report exit-condition
  ifelse converged [
    set converged-ticks converged-ticks + 1
    calc-confidence
    let min-confidence [confidence] of min-one-of turtles [confidence]
    ifelse min-confidence > confidence-cutoff [
      report true
    ][
      report false
    ]
  ][
    set converged-ticks 0
    report false
  ]
end





; reports true if all scientists converged to one theory and consider this theory
; to be among their best theories
to-report converged
  let count-th1-scientists count turtles with [
    mytheory = 0 and member? 0 cur-best-th]
  let count-th2-scientists count turtles with [
    mytheory = 1 and member? 1 cur-best-th]
  ifelse count-th1-scientists = scientists or count-th2-scientists = scientists [
    ifelse count-th1-scientists > 0 [
      if last-converged-th = 1 [
        set converged-ticks 0
      ]
      set last-converged-th 0
    ][
      if last-converged-th = 0 [
        set converged-ticks 0
      ]
      set last-converged-th 1
    ]
    report true
  ][
    report false
  ]
end





; reports 1 if scientists converged on the best theory (th1) by the end of the 
; run, 0 otherwise
to-report successful-run
  ifelse count turtles with [mytheory = 0] = scientists [
    report 1
  ][
    report 0
  ]
end





; reports the number of researchers on th# at the end of the run
to-report run-end-scientists [th#]
  if th# = "th1" [
    set th# 0
  ]
  if th# = "th2" [
    set th# 1
  ]
  report count turtles with [mytheory = th#]
end





to-report average-jumps
  let jumps 0
  let avgjumps 0
  ask turtles [
    set jumps times-jumped + jumps
  ]
  set avgjumps (jumps / scientists)
  report avgjumps
end





; reports the average proportion of time the researchers considered both 
; theories equally good. The +1 accounts for the extra calculation already 
; taking place during the setup
to-report avg-indiff-time
  let avg-indiff-time-cache 0
  ifelse converged-ticks = 0 [
    set avg-indiff-time-cache (indiff-count / (scientists * (ticks + 1)))
  ][
    set avg-indiff-time-cache 
      (indiff-count / (scientists * (round-converged + 1)))
  ]
  report avg-indiff-time-cache
end





; reports the last time-point scientists converged. The + 1 correction is due 
; to the way how `converged-ticks` is set in the `converged` procedure.
to-report round-converged
  report ticks - converged-ticks + 1
end





; reports the current average signal for th# and updates the global
; `th-i-signal` accordingly
to-report average-signal [th#]
  if critical-interaction and th-i-signal = (list th1-signal th2-signal) [
    set th-i-signal [0 0]
    ask turtles [
      set th-i-signal (map + th-i-signal subj-th-i-signal) 
    ]
    set th-i-signal map [ cur-th-signal -> cur-th-signal / scientists]
      th-i-signal
  ]
  if th# = "th1" [
    set th# 0
  ]
  if th# = "th2" [
    set th# 1
  ]
  report item th# th-i-signal
end

